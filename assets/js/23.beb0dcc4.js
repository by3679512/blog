(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{431:function(t,s,a){"use strict";a.r(s);var e=a(2),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("前几天完成了用VuePress进行本地化博客网站搭建,今天介绍如何使用自动化部署项目到Github Pages上。")]),t._v(" "),s("p",[t._v("本文介绍两种自动化部署方法，一种是用sh脚本自动化部署，另外一种使用Github的"),s("strong",[t._v("GitHub Actions")]),t._v("实现自动化部署。")]),t._v(" "),s("h2",{attrs:{id:"sh脚本部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sh脚本部署"}},[t._v("#")]),t._v(" sh脚本部署")]),t._v(" "),s("h3",{attrs:{id:"sh脚本是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sh脚本是什么"}},[t._v("#")]),t._v(" sh脚本是什么")]),t._v(" "),s("p",[t._v("sh脚本是一种文本文件，其中包含一系列的命令和程序，用于在Unix/Linux系统上自动执行任务和操作。sh是shell的简写，是Unix/Linux上默认的命令行解释器。sh脚本可以用于自动化操作、批量处理数据以及在系统启动时自动运行程序等。")]),t._v(" "),s("h3",{attrs:{id:"部署工作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部署工作"}},[t._v("#")]),t._v(" 部署工作")]),t._v(" "),s("p",[t._v("我们在 Github 上新建一个仓库，仓库名为："),s("code",[t._v("myblog")]),t._v("。")]),t._v(" "),s("p",[t._v("接着修改 "),s("code",[t._v("config.js")]),t._v(" 文件，添加 "),s("code",[t._v("base")]),t._v("配置， "),s("code",[t._v("base")]),t._v("的值为刚刚创建的仓库名，这个是为了后面访问Github Pages用的。")]),t._v(" "),s("p",[t._v("此时"),s("code",[t._v("config.js")]),t._v("的结构为")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("module.exports = {\n  // ...\n  base: '/myblog/',\n  // ...\n} \n")])])]),s("p",[t._v("在项目的根目录下创建一个sh脚本，命名为"),s("code",[t._v("deploy.sh")]),t._v(",添加以下内容")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/usr/bin/env sh")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 确保脚本抛出遇到的错误")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成静态文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入生成的文件夹")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" docs/.vuepress/dist\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果是发布到自定义域名")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# echo 'www.example.com' > CNAME")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-A")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deploy'")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果发布到 https://<USERNAME>.github.io/<REPO>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" git@github.com:by3679512/myblog.git master:gh-pages\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" -\n")])])]),s("p",[t._v("最后执行脚本，在仓库的"),s("code",[t._v("Settings -> Pages")]),t._v(" 中可以看到的Github Pages地址")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/729d097e68e945a9a6f89e8e68745456~tplv-k3u1fbpfcp-zoom-1.image",alt:"ikgL8q.png"}})]),t._v(" "),s("h2",{attrs:{id:"github-actions自动化部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github-actions自动化部署"}},[t._v("#")]),t._v(" GitHub Actions自动化部署")]),t._v(" "),s("p",[t._v("现在介绍如何使用GitHub Actions自动化部署项目到Github Pages上。")]),t._v(" "),s("p",[t._v("当我们完成项目本地化搭建后，一般都是使用"),s("code",[t._v("npm run buid")]),t._v("或者"),s("code",[t._v("yarn build")]),t._v("命令进行打包")]),t._v(" "),s("p",[t._v("接着将打包文件远程推送到Github Pages上，访问Github Pages地址确认是否部署成功")]),t._v(" "),s("p",[t._v("在我们打包项目和推送静态文件这个过程中，会发现有很多相似的重复性操作，既然是重复性的，我们能不能把操作写成脚本，以后每次操作只要执行脚本就好呢？")]),t._v(" "),s("p",[t._v("GitHub很早注意到这一点，推出了"),s("strong",[t._v("GitHub Actions")]),t._v("帮助开发者实现这个想法。")]),t._v(" "),s("h3",{attrs:{id:"github-actions是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github-actions是什么"}},[t._v("#")]),t._v(" GitHub Actions是什么？")]),t._v(" "),s("p",[t._v("GitHub Actions 是一个持续集成/持续部署（CI/CD）平台，可以在 GitHub 上构建、测试和部署代码。它允许开发者定义自动化的工作流程，以响应不同类型的事件，如提交代码、打标签或发布版本等。GitHub Actions 提供了一组预定义的操作和工具，也可以使用 Docker 或自己的脚本进行自定义操作。")]),t._v(" "),s("h3",{attrs:{id:"github-actions中的基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github-actions中的基本概念"}},[t._v("#")]),t._v(" GitHub Actions中的基本概念")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Workflow：工作流程，即定义自动化过程的 YAML 文件")])]),t._v(" "),s("li",[s("p",[t._v("Event：事件，触发工作流程的事件类型，如 push、pull_request 等")])]),t._v(" "),s("li",[s("p",[t._v("Job：任务，工作流程中一个单独的执行单元")])]),t._v(" "),s("li",[s("p",[t._v("Step：步骤，任务中的一个独立操作，可以是一个 shell 命令、一个脚本或一个预定义的操作")])]),t._v(" "),s("li",[s("p",[t._v("Action：动作，可重用的代码块，可以在多个工作流程和任务中使用")])]),t._v(" "),s("li",[s("p",[t._v("Runner：运行者，托管工作流程的机器，可以是 GitHub 托管的虚拟机或自己的物理机器")])])]),t._v(" "),s("blockquote",[s("p",[t._v("关于YAML可以看阮一峰大大的这篇"),s("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2016/07/yaml.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("文章"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"搭建一个工作流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#搭建一个工作流"}},[t._v("#")]),t._v(" 搭建一个工作流")]),t._v(" "),s("p",[t._v("创建一个 GitHub 仓库命名为 "),s("code",[t._v("myblog")]),t._v(" 点击Action进入工作流页面，在这里可以使用别人的工作流，也可以自己创建。")]),t._v(" "),s("ul",[s("li",[t._v("前期工作")])]),t._v(" "),s("p",[t._v("在部署之前，我们需要在自己的仓库上设置Secrets进行身份验证，而设置Secrets就需要用到Token。")]),t._v(" "),s("p",[t._v("进入 Github 后，点击我们的头像，进入 "),s("code",[t._v("Settings -> Developer settings -> Personal access tokens")]),t._v(" ,点击进入生成token")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7ac0f3599fa84a889ebee8b5034ede31~tplv-k3u1fbpfcp-zoom-1.image",alt:"ikx0vE.png"}})]),t._v(" "),s("p",[t._v("此处的"),s("code",[t._v("Note")]),t._v("为用途，可随意命名，"),s("code",[t._v("Expiration")]),t._v("为期限，可随意选择，但建议设为"),s("code",[t._v("No expiration")]),t._v(",最后勾选"),s("code",[t._v("repo")]),t._v(" 点击"),s("code",[t._v("Generate token")]),t._v("生成")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5abee52533364750889c57665744fbdc~tplv-k3u1fbpfcp-zoom-1.image",alt:"ikxl4C.png"}})]),t._v(" "),s("p",[t._v("复制刚刚生成的Token，注意Token生成只出现一次，刷新页面会找不到，建议保存好")]),t._v(" "),s("p",[t._v("在仓库的 "),s("code",[t._v("Settings -> Secrets")]),t._v(" 上，找到"),s("code",[t._v("New repository secret")]),t._v("创建一个secret，命名一定要为"),s("code",[t._v("ACCESS_TOKEN")]),t._v(",然后在"),s("code",[t._v("Value")]),t._v("填写刚刚生成的"),s("code",[t._v("Token")]),t._v(",最后"),s("code",[t._v("Add secret")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/299784dcbc634c019e5421020703c1af~tplv-k3u1fbpfcp-zoom-1.image",alt:"ikx2dX.png"}})]),t._v(" "),s("ul",[s("li",[t._v("创建工作流")])]),t._v(" "),s("p",[t._v("在自己项目根目录创建"),s("code",[t._v(".github/workflows/")]),t._v(",并在其中创建文件"),s("code",[t._v("deploy.yaml")]),t._v(",文件命名随个人喜好，只要是yaml类型文件即可。")]),t._v(" "),s("p",[t._v("编写以下脚本")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Build and Deploy\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("push"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#监听push动作")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 任务")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build-and-deploy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Checkout\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@master\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" vuepress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deploy\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" jenkey2011/vuepress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deploy@master\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ACCESS_TOKEN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.ACCESS_TOKEN "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#刚刚生成的secret")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("TARGET_REPO")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" by3679512/myblog "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#仓库地址")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("TARGET_BRANCH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pages "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#目标分支，gh-pages一般用来存放生成的静态文件")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("BUILD_SCRIPT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" yarn "),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("&&")]),t._v(" yarn build\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("BUILD_DIR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docs/.vuepress/dist/ "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#生成的静态文件存放目录")]),t._v("\n")])])]),s("p",[t._v("最后将本地仓库推送到远程仓库。")]),t._v(" "),s("ul",[s("li",[t._v("验证成果")])]),t._v(" "),s("p",[t._v("打开远程仓库的"),s("code",[t._v("Settings -> Pages")]),t._v("，如果看到GitHub Pages已经生成，说明工作流已经成功执行。当每次我们在本地推送一个"),s("code",[t._v("push")]),t._v("动作后，GitHub会自动执行"),s("code",[t._v(".github/workflows/")]),t._v("下的脚本，进行项目自动化部署。当然我们可以点击仓库中"),s("code",[t._v("Actions")]),t._v("查看我们的工作流。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/49c59bcfa8ea4dab90bd1009c7290357~tplv-k3u1fbpfcp-zoom-1.image",alt:"ikx8TA.png"}})]),t._v(" "),s("p",[t._v("至此，我们已经完成了项目的自动化部署。")])])}),[],!1,null,null,null);s.default=n.exports}}]);